<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.douliao.mapper.NewLiveMapper">
	<select id="isAudit" parameterType="com.douliao.controller.server.model.CheckAudit" resultType="com.douliao.model.database.All_live_room">
		select * from all_live_room where user_id=#{user_id}
	</select>
	<select id="selLiveVideo" parameterType="com.douliao.model.database.Video_List" resultType="com.douliao.model.database.All_live_room">
		select * from all_live_room where user_id=#{user_id}
	</select>
	<update id="updateLiveVideo" parameterType="com.douliao.model.database.Video_List">
		update all_live_room 
		<set>
			<if test="video_url!=null and video_url!=''">
				live_url=#{video_url},
			</if>
			<if test="img_url!=null and img_url!=''">
				everyday_img=#{img_url},
			</if>
		</set>
		where user_id=#{user_id}
	</update>
	<insert id="insLiveVideo" parameterType="com.douliao.model.database.Video_List">
		insert into all_live_room(live_room_id,user_id,create_time,live_url,everyday_img) values(#{live_room_id},#{user_id},#{create_time},#{video_url},#{img_url})
	</insert>
	<select id="isAnchor" parameterType="com.douliao.controller.server.model.BeginLiveParam" resultType="com.douliao.model.database.Live_app_user_info">
		select user_id,user_authentication from live_app_user_info where user_id=#{live_user_id}
	</select>
	<select id="selLivePrice" parameterType="com.douliao.controller.server.model.BeginLiveParam" resultType="java.lang.Double">
		select * from live_price where live_type=#{live_room_type}
	</select>
	<select id="isBeginLive" parameterType="com.douliao.controller.server.model.BeginLiveParam" resultType="map">
		select * from all_live_room_info where live_room_id=#{live_room_id} and status=1
	</select>
	<insert id="beginLive" parameterType="com.douliao.controller.server.model.BeginLiveParam">
		insert into all_live_room_info(live_room_id,live_room_type,live_price,live_user_id,start_time,status) values(#{live_room_id},#{live_room_type},#{live_price},#{live_user_id},#{start_time},#{status})
	</insert>
	<select id="selRoomRecord" parameterType="com.douliao.controller.server.model.EntryRoomParam" resultType="com.douliao.model.database.All_live_room_chat">
		select * from all_live_room_chat where user_id=#{user_id}
	</select>
	<update id="updateRoomRecord" parameterType="com.douliao.controller.server.model.EntryRoomParam">
		update all_live_room_chat set live_room_id=#{live_room_id},live_room_type=#{live_room_type},start_time=#{start_time},status=#{status} where user_id=#{user_id}
	</update>
	<insert id="insRoomRecord" parameterType="com.douliao.controller.server.model.EntryRoomParam">
		insert into all_live_room_chat(live_room_id,live_room_type,user_id,start_time,status) values(#{live_room_id},#{live_room_type},#{user_id},#{start_time},#{status})
	</insert>
	<select id="selleaveRoom" parameterType="com.douliao.controller.server.model.LeaveRoomParam" resultType="com.douliao.model.database.All_live_room_chat">
		select alrc.id,alrc.live_room_id,alrc.live_room_type,alrc.user_id,alrc.chat_time,alrc.start_time,alrc.end_time,alrc.status,alri.live_price 
 		from all_live_room_chat alrc left join all_live_room_info alri on alrc.live_room_id=alri.live_room_id where alrc.user_id=#{user_id} and alri.status=1
	</select>
	<update id="updateleaveRoom" parameterType="com.douliao.model.database.All_live_room_chat">
		update all_live_room_chat set chat_time=#{chat_time},total_gold=#{total_gold},end_time=#{end_time},status=#{status} where user_id=#{user_id}
	</update>
	<update id="switchRoom" parameterType="com.douliao.controller.server.model.SwitchRoomParam">
		update all_live_room_info 
		<set>
			<if test="live_room_type!=0">
				live_room_type=#{live_room_type},
			</if>
			<if test="live_price!=0.0 and live_price!=0">
				live_price=#{live_price}
			</if>
		</set>
		where live_room_id=#{live_room_id} and status=1
	</update>
	<update id="updateRoomChat" parameterType="com.douliao.controller.server.model.SwitchRoomParam">
		update all_live_room_chat set live_room_type=#{live_room_type} where live_room_id=#{live_room_id} and status=1
	</update>
	<update id="endLive" parameterType="com.douliao.controller.server.model.EndLiveParam">
		update all_live_room_info set end_time=#{end_time},status=#{status} where live_room_id=#{live_room_id}
	</update>
	<select id="selGiftsInfo" parameterType="com.douliao.controller.server.model.GiveGiftParam" resultType="com.douliao.model.database.Gifts">
		select * from gifts where id=#{gifts_id}
	</select>
	<update id="reduceGold" parameterType="com.douliao.controller.server.model.GiveGiftParam">
		update live_app_user_info set user_package=user_package-#{total_gold} where user_id=#{user_id} and user_package-#{total_gold}>0
	</update>
	<insert id="userConsumRecord" parameterType="com.douliao.controller.server.model.GiveGiftParam">
		insert into user_consum(user_id,gifts_id,consum_type,consum_money,consum_amount,create_time) values(#{user_id},#{gifts_id},#{consum_type},#{total_gold},#{amount},#{create_time})
	</insert>
	<select id="selanchorIncome" parameterType="com.douliao.controller.server.model.GiveGiftParam" resultType="com.douliao.model.database.Anchor_income">
		select * from anchor_income	where live_room_id=#{live_room_id} and income_date=#{income_date}
	</select>
	<select id="selLiveProfit" parameterType="com.douliao.controller.server.model.GiveGiftParam" resultType="com.douliao.model.database.All_live_room">
		select id,live_room_id,user_id,live_price,live_profit from all_live_room where live_room_id=#{live_room_id}
	</select>
	<update id="insUserIncome" parameterType="com.douliao.controller.server.model.GiveGiftParam">
		update anchor_income ai,live_app_user_info laui set everyday_scroe=everyday_scroe+#{score},laui.user_score=laui.user_score+#{score}
		 where ai.anchor_id=laui.user_id and ai.live_room_id=#{live_room_id} and ai.income_date=#{income_date}
	</update>
	<insert id="insRoomGifts" parameterType="com.douliao.controller.server.model.GiveGiftParam">
		insert into all_live_room_gifts(live_room_id,user_id,gifts_id,amount,gifts_price,total_gold,create_time) vlues(#{live_room_id},#{user_id},#{gifts_id},#{amount},#{gifts_price},#{total_gold},#{create_time})
	</insert>
	<update id="updateTotalScore" parameterType="com.douliao.controller.server.model.GiveGiftParam">
		update all_live_room alr,all_live_room_info alri set alr.anchor_total_score=alr.anchor_total_score+#{score},alri.score=alri.score+#{score} 
		where alr.live_room_id=alri.live_room_id and alr.live_room_id=#{item.live_room_id}
	</update>
	<select id="selUserPackage" parameterType="com.douliao.controller.server.model.GiveGiftParam" resultType="com.douliao.model.database.Live_app_user_info">
		select user_id,user_package from live_app_user_info where user_id=#{user_id}
	</select>
	<update id="updateRoomStatus" parameterType="map">
		update all_live_room_info set end_time=#{end_time},status=#{status} where live_room_id=#{live_room_id}
	</update>
	<update id="updateRoomChatStatus" parameterType="map">
		update all_live_room_chat set end_time=#{end_time},status=#{status} where live_room_id=#{live_room_id}
	</update>
	<select id="showLiveList" parameterType="com.douliao.controller.server.model.ShowLiveParam" resultType="map">
		select laui.user_id,laui.user_name,laui.user_head,laui.fans_number,alr.everyday_img,alr.im_channel,alri.live_room_id,alri.live_room_type,alri.live_price 
		from live_app_user_info laui left join all_live_room alr on laui.user_id=alr.user_id left join all_live_room_info alri on laui.user_id=alri.live_user_id 
		where alri.live_room_type=#{live_room_type} and alri.status!=2 order by laui.fans_number desc limit 10
	</select>
	<select id="anchorInfo" parameterType="com.douliao.controller.server.model.AnchorInfoParam" resultType="com.douliao.model.AnchorInfo">
		select laui.user_id,laui.user_name,laui.user_head,alr.live_room_id,alr.everyday_img,alr.im_channel from live_app_user_info laui left join all_live_room alr on laui.user_id=alr.user_id where laui.user_id=#{userId}
	</select>
	<select id="selCharacterTypeByUserId" parameterType="com.douliao.controller.server.model.AnchorInfoParam" resultType="com.douliao.model.database.User_character">
		select * from user_character where user_id=#{userId} and belong_id=1
	</select>
	<select id="selCharacterType" resultType="com.douliao.model.database.CharacterType">
		select * from character_type where id in 
		<foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
	</select>
	<select id="selFollow" parameterType="com.douliao.controller.server.model.AnchorInfoParam" resultType="map">
		select * from follow where user_id=#{userId} and fans_user_id=#{look_user_id} and status=2
	</select>
	<select id="selLiveInfo" parameterType="com.douliao.controller.server.model.AnchorBalanceParam" resultType="com.douliao.model.database.All_live_room_info">
		select * from all_live_room_info where live_user_id=#{live_user_id} order by start_time desc limit 1
	</select>
	<select id="selReceiveGift" parameterType="com.douliao.model.database.All_live_room_info" resultType="map">
		select alrg.live_room_id,alrg.gifts_id,alrg.create_time,g.gifts_name,g.gifts_url 
		from all_live_room_gifts alrg left join gifts g on alrg.gifts_id=g.id 
		where alrg.live_room_id=#{live_room_id} and alrg.create_time>#{start_time} and #{end_time}>alrg.create_time
	</select>
</mapper>